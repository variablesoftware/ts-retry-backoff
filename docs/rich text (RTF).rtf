{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling1\cocoaplatform1{\fonttbl\f0\fnil\fcharset0 .SFUI-Regular;\f1\fnil\fcharset0 .SFUI-Bold;\f2\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;
}
{\colortbl;\red255\green255\blue255;\red17\green17\blue17;}
{\*\expandedcolortbl;;\cssrgb\c6700\c6700\c6700;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl250\slmult1\pardirnatural\partightenfactor0

\f0\fs34 \cf2 Here\'92s a rough breakdown of what you\'92ll see once you bundle, minify and publish on npm (all figures approximate):\
\pard\tqr\tx100\tx260\li260\fi-260\sl250\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f1\b Core JS file
\f0\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl250\slmult1\sb240\partightenfactor0
\cf2 	\'95	Unminified (post-compile): ~2 kB\
	\'95	Minified: ~1 kB\
	\'95	Minified + gzipped: ~0.3 kB\
\pard\tqr\tx100\tx260\li260\fi-260\sl250\slmult1\sb240\partightenfactor0
\cf2 	\'95	
\f1\b npm package tarball
\f0\b0  (
\f2 npm pack
\f0  \uc0\u8594  
\f2 ts-retry-backoff-x.y.z.tgz
\f0 )\
\pard\tqr\tx500\tx660\li660\fi-660\sl250\slmult1\sb240\partightenfactor0
\cf2 	\'95	Compressed (.tgz): ~2 kB\
	\'95	Uncompressed (files on disk, including README, types, package.json): ~6 kB\
\
So if you\'92re worrying about Worker bundle impact, you\'92re looking at roughly 
\f1\b 1 kB
\f0\b0  extra uncompressed (your runtime JS), which drops to 
\f1\b ~300 bytes
\f0\b0  when gzipped. Meanwhile the full npm tarball you publish will be in the low-kilobyte range as well.}